# Copyright (c) 2000-2008, JPackage Project
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the JPackage Project nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

%define grname      plexus
%define gcj_support 1

# If you don't want to build with maven, and use straight ant instead,
# give rpmbuild option '--without maven'

%define with_maven %{!?_without_maven:1}%{?_without_maven:0}
%define without_maven %{?_without_maven:1}%{!?_without_maven:0}

%define section     free
%define parent plexus
%define subname compiler

Name:           plexus-compiler
Version:        1.5.3
Release:        %mkrel 1.0.1
Epoch:          0
Summary:        Plexus Compiler
License:        Apache Software License 2.0
Group:          Development/Java
URL:            http://plexus.codehaus.org/
Source0:        plexus-compiler-1.5.3.tar.gz
# svn export http://svn.codehaus.org/plexus/tags/plexus-compiler-1.5.3/

Source1:        plexus-compiler-settings.xml
Source2:        plexus-compiler-1.5.3-autogenerated-files.tar.gz
Source3:       plexus-compiler-1.5.3-jpp-depmap.xml

Patch0:         plexus-compiler-1.5.3-javac-Commandline.patch
Patch1:         plexus-compiler-1.5.3-compilers-pom.patch
Patch2:         plexus-compiler-1.5.3-compiler-aspectj-pom.patch
Patch3:         plexus-compiler-1.5.3-compiler-eclipse-pom.patch
Patch4:         plexus-compiler-1.5.3-compiler-jikes-pom.patch

Patch99:         plexus-compiler-1.5.3-temp-AspectJCompilerTest.patch

BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-buildroot

%if %{gcj_support}
BuildRequires:  java-gcj-compat-devel
%else
BuildArch:      noarch
BuildRequires:  java-devel
%endif
BuildRequires:  java-rpmbuild >= 0:1.6
BuildRequires:  ant >= 0:1.6
BuildRequires:  ant-nodeps >= 0:1.6
BuildRequires:  junit
%if %{with_maven}
BuildRequires:  maven2 >= 0:2.0.4
BuildRequires:  maven2-plugin-ant
BuildRequires:  maven2-plugin-compiler
BuildRequires:  maven2-plugin-install
BuildRequires:  maven2-plugin-jar
BuildRequires:  maven2-plugin-javadoc
BuildRequires:  maven2-plugin-release
BuildRequires:  maven2-plugin-resources
BuildRequires:  maven2-plugin-surefire
BuildRequires:  maven-shared
BuildRequires:  jmock
BuildRequires:  plexus-maven-plugin >= 0:1.3.5
%endif
BuildRequires:  aspectj >= 0:1.5.3
BuildRequires:  classworlds
BuildRequires:  eclipse-ecj
BuildRequires:  maven2
BuildRequires:  maven-wagon
BuildRequires:  plexus-container-default
BuildRequires:  plexus-utils

Requires:       aspectj >= 0:1.5.3
Requires:       classworlds
Requires:       eclipse-ecj
Requires:       plexus-container-default
Requires:       plexus-utils

%description
Plexus Compiler adds support for using various compilers from a unified api.

%package javadoc
Summary:        Javadoc for %{name}
Group:          Development/Java

%description javadoc
Javadoc for %{name}.

%prep
%setup -q 
cp %{SOURCE1} settings.xml
sed -i -e "s|<url>__JPP_URL_PLACEHOLDER__</url>|<url>file://`pwd`/.m2/repository</url>|g" settings.xml
sed -i -e "s|<url>__JAVADIR_PLACEHOLDER__</url>|<url>file://`pwd`/external_repo</url>|g" settings.xml
sed -i -e "s|<url>__MAVENREPO_DIR_PLACEHOLDER__</url>|<url>file://`pwd`/.m2/repository</url>|g" settings.xml

%if %{without_maven}
gzip -dc %{SOURCE2} | tar xf -
%endif

%patch0 -b .sav0
%patch1 -b .sav1
%patch2 -b .sav2
%patch3 -b .sav3
%patch4 -b .sav4

%patch99 -b .sav99

%build
export JAVA_HOME=%{_jvmdir}/java-rpmbuild
export MAVEN_REPO_LOCAL=`pwd`/.m2/repository
mkdir -p $MAVEN_REPO_LOCAL
export M2_SETTINGS=$(pwd)/settings.xml
cp $M2_SETTINGS .m2
%if %{with_maven}
mvn-jpp -e \
    -s $M2_SETTINGS \
    -Duser.home=$(pwd) \
    -Dmaven.repo.local=$MAVEN_REPO_LOCAL \
    -Dmaven2.jpp.depmap.file=%{SOURCE3} \
    -Dmaven.test.failure.ignore=true \
    ant:ant install javadoc:javadoc

%else
mkdir -p $MAVEN_REPO_LOCAL/org/codehaus/plexus/plexus-utils/1.4.8/
ln -sf $(build-classpath plexus/utils) $MAVEN_REPO_LOCAL/org/codehaus/plexus/plexus-utils/1.4.8/plexus-utils-1.4.8.jar
mkdir -p $MAVEN_REPO_LOCAL/junit/junit/3.8.1/
ln -sf $(build-classpath junit) $MAVEN_REPO_LOCAL/junit/junit/3.8.1/junit-3.8.1.jar
mkdir -p $MAVEN_REPO_LOCAL/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/
ln -sf $(build-classpath plexus/container-default) $MAVEN_REPO_LOCAL/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar
mkdir -p $MAVEN_REPO_LOCAL/classworlds/classworlds/1.1/
ln -sf $(build-classpath classworlds) $MAVEN_REPO_LOCAL/classworlds/classworlds/1.1/classworlds-1.1.jar
mkdir -p $MAVEN_REPO_LOCAL/org/apache/maven/maven-model/2.0.7/
ln -sf $(build-classpath maven2/model) $MAVEN_REPO_LOCAL/org/apache/maven/maven-model/2.0.7/maven-model-2.0.7.jar
mkdir -p $MAVEN_REPO_LOCAL/commons-lang/commons-lang/2.3/
ln -sf $(build-classpath commons-lang) $MAVEN_REPO_LOCAL/commons-lang/commons-lang/2.3/commons-lang-2.3.jar
mkdir -p $MAVEN_REPO_LOCAL/org/apache/maven/maven-repository-metadata/2.0.7/
ln -sf $(build-classpath maven2/repository-metadata) $MAVEN_REPO_LOCAL/org/apache/maven/maven-repository-metadata/2.0.7/maven-repository-metadata-2.0.7.jar
mkdir -p $MAVEN_REPO_LOCAL/jdom/jdom/1.0/
ln -sf $(build-classpath jdom) $MAVEN_REPO_LOCAL/jdom/jdom/1.0/jdom-1.0.jar
mkdir -p $MAVEN_REPO_LOCAL/org/apache/maven/maven-artifact-manager/2.0.7/
ln -sf $(build-classpath maven2/artifact-manager) $MAVEN_REPO_LOCAL/org/apache/maven/maven-artifact-manager/2.0.7/maven-artifact-manager-2.0.7.jar
mkdir -p $MAVEN_REPO_LOCAL/org/apache/maven/maven-artifact-test/2.0.7/
ln -sf $(build-classpath maven2/artifact-test) $MAVEN_REPO_LOCAL/org/apache/maven/maven-artifact-test/2.0.7/maven-artifact-test-2.0.7.jar
mkdir -p $MAVEN_REPO_LOCAL/org/apache/maven/maven-artifact/2.0.7/
ln -sf $(build-classpath maven2/artifact) $MAVEN_REPO_LOCAL/org/apache/maven/maven-artifact/2.0.7/maven-artifact-2.0.7.jar
mkdir -p $MAVEN_REPO_LOCAL/org/apache/maven/maven-settings/2.0.7/
ln -sf $(build-classpath maven2/settings) $MAVEN_REPO_LOCAL/org/apache/maven/maven-settings/2.0.7/maven-settings-2.0.7.jar
mkdir -p $MAVEN_REPO_LOCAL/org/apache/maven/wagon/wagon-provider-api/1.0/
ln -sf $(build-classpath maven-wagon/provider-api) $MAVEN_REPO_LOCAL/org/apache/maven/wagon/wagon-provider-api/1.0/wagon-provider-api-1.0.jar
mkdir -p $MAVEN_REPO_LOCAL/aspectj/aspectjrt/1.2.1/
ln -sf $(build-classpath aspectjrt) $MAVEN_REPO_LOCAL/aspectj/aspectjrt/1.2.1/aspectjrt-1.2.1.jar
mkdir -p $MAVEN_REPO_LOCAL/aspectj/aspectjtools/1.2.1/
ln -sf $(build-classpath aspectjtools) $MAVEN_REPO_LOCAL/aspectj/aspectjtools/1.2.1/aspectjtools-1.2.1.jar
mkdir -p $HOME/.m2/repository/aspectj/aspectjrt/1.5.0/
ln -sf $(build-classpath aspectjrt) $HOME/.m2/repository/aspectj/aspectjrt/1.5.0/aspectjrt-1.5.0.jar
mkdir -p $HOME/.m2/repository/aspectj/aspectjtools/1.5.0/
ln -sf $(build-classpath aspectjtools) $HOME/.m2/repository/aspectj/aspectjtools/1.5.0/aspectjtools-1.5.0.jar
mkdir -p $HOME/.m2/repository/commons-lang/commons-lang/2.0/
ln -sf $(build-classpath commons-lang) $HOME/.m2/repository/commons-lang/commons-lang/2.0/commons-lang-2.0.jar

unset CLASSPATH
pushd plexus-compiler-api
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd

pushd plexus-compiler-manager
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd

pushd plexus-compiler-test
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd

pushd plexus-compilers

pushd plexus-compiler-aspectj
ECLIPSE_JAR=$(ls /usr/share/eclipse/plugins/org.eclipse.equinox.common_*.jar) && export CLASSPATH=$(ls /usr/share/eclipse/plugins/org.eclipse.equinox.common_*.jar)
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd

pushd plexus-compiler-csharp
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd

pushd plexus-compiler-eclipse
export CLASSPATH=$(build-classpath ecj)
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd

pushd plexus-compiler-javac
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd

pushd plexus-compiler-jikes
ant -Dmaven.repo.local=$MAVEN_REPO_LOCAL -Dmaven.settings.offline=true jar javadoc
popd
popd
%endif

%install
rm -rf $RPM_BUILD_ROOT
# jars
install -d -m 755 $RPM_BUILD_ROOT%{_javadir}/plexus
install -pm 644 %{name}-api/target/%{name}-api-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-api-%{version}.jar
%add_to_maven_depmap org.codehaus.plexus %{name}-api %{version} JPP/%{parent} %{subname}-api
%if %{with_maven}
install -pm 644 %{name}-test/target/%{name}-test-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-test-%{version}.jar
%endif
%add_to_maven_depmap org.codehaus.plexus %{name}-test %{version} JPP/%{parent} %{subname}-test
install -pm 644 %{name}-manager/target/%{name}-manager-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-manager-%{version}.jar
%add_to_maven_depmap org.codehaus.plexus %{name}-manager %{version} JPP/%{parent} %{subname}-manager
install -pm 644 %{parent}-compilers/plexus-compiler-aspectj/target/%{name}-aspectj-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-aspectj-%{version}.jar
%add_to_maven_depmap org.codehaus.plexus %{name}-aspectj %{version} JPP/%{parent} %{subname}-aspectj
install -pm 644 %{parent}-compilers/plexus-compiler-csharp/target/%{name}-csharp-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-csharp-%{version}.jar
%add_to_maven_depmap org.codehaus.plexus %{name}-csharp %{version} JPP/%{parent} %{subname}-csharp
install -pm 644 %{parent}-compilers/plexus-compiler-eclipse/target/%{name}-eclipse-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-eclipse-%{version}.jar
%add_to_maven_depmap org.codehaus.plexus %{name}-eclipse %{version} JPP/%{parent} %{subname}-eclipse
install -pm 644 %{parent}-compilers/plexus-compiler-javac/target/%{name}-javac-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-javac-%{version}.jar
%add_to_maven_depmap org.codehaus.plexus %{name}-javac %{version} JPP/%{parent} %{subname}-javac
install -pm 644 %{parent}-compilers/plexus-compiler-jikes/target/%{name}-jikes-%{version}.jar \
  $RPM_BUILD_ROOT%{_javadir}/%{parent}/compiler-jikes-%{version}.jar
%add_to_maven_depmap org.codehaus.plexus %{name}-jikes %{version} JPP/%{parent} %{subname}-jikes
(cd $RPM_BUILD_ROOT%{_javadir}/%{parent} && for jar in *-%{version}*; do ln -sf ${jar} `echo $jar| sed  "s|-%{version}||g"`; done)

# poms
install -d -m 755 $RPM_BUILD_ROOT%{_datadir}/maven2/poms
install -pm 644 pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}.pom
install -pm 644 %{name}-api/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-api.pom
install -pm 644 %{name}-test/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-test.pom
install -pm 644 %{name}-manager/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-manager.pom
install -pm 644 %{name}s/%{name}-aspectj/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-aspectj.pom
install -pm 644 %{name}s/%{name}-csharp/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-csharp.pom
install -pm 644 %{name}s/%{name}-eclipse/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-eclipse.pom
install -pm 644 %{name}s/%{name}-javac/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-javac.pom
install -pm 644 %{name}s/%{name}-jikes/pom.xml \
    $RPM_BUILD_ROOT%{_datadir}/maven2/poms/JPP.%{parent}-%{subname}-jikes.pom

# javadoc
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/api
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/manager
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/test
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/aspectj
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/csharp
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/eclipse
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/javac
install -d -m 755 $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/jikes
cp -pr %{name}-api/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/api
cp -pr %{name}-manager/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/manager
%if %{with_maven}
cp -pr %{name}-test/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/test
%endif
cp -pr %{parent}-compilers/%{name}-aspectj/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/aspectj
cp -pr %{parent}-compilers/%{name}-csharp/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/csharp
cp -pr %{parent}-compilers/%{name}-eclipse/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/eclipse
cp -pr %{parent}-compilers/%{name}-javac/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/javac
cp -pr %{parent}-compilers/%{name}-jikes/target/site/apidocs/* $RPM_BUILD_ROOT%{_javadocdir}/%{name}-%{version}/compilers/jikes
ln -s %{name}-%{version} $RPM_BUILD_ROOT%{_javadocdir}/%{name} 

%{gcj_compile}

%clean
rm -rf $RPM_BUILD_ROOT

%post
%update_maven_depmap
%if %{gcj_support}
%{update_gcjdb}
%endif

%postun
%update_maven_depmap
%if %{gcj_support}
%{clean_gcjdb}
%endif


%files
%defattr(0644,root,root,0755)
%{_javadir}/%{parent}/*
%{_datadir}/maven2/poms/*
%{_mavendepmapfragdir}
%if %{gcj_support}
%dir %attr(-,root,root) %{_libdir}/gcj/%{name}
%attr(-,root,root) %{_libdir}/gcj/%{name}/compiler*-%{version}.jar.*
%endif

%files javadoc
%defattr(-,root,root,-)
%doc %{_javadocdir}/%{name}-%{version}
%doc %{_javadocdir}/%{name}
